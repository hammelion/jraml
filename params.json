{"name":"Jraml","tagline":"raml, java, jraml, rest, api, jaxrs","body":"# Purpose of project\r\nJraml helps you build your java implementation of REST API, based on specification, described by raml file.\r\n\r\n# Easy to use\r\n## Connect a library\r\n```xml\r\n...\r\n        <dependency>\r\n            <groupId>com.github.hammelion</groupId>\r\n            <artifactId>jraml</artifactId>\r\n            <version>0.2.2</version>\r\n        </dependency>\r\n...\r\n```\r\n## Add listener to your servlet container configuration (web.xml)\r\n```xml\r\n...\r\n    <listener>\r\n        <listener-class>org.jraml.JRamlBootstrap</listener-class>\r\n    </listener>\r\n...\r\n```\r\n## Annotate your resources with **@RAMLConfig** annotation\r\n```java\r\n...\r\n@RAMLConfig(\"api.raml\")\r\npublic class TestResource {\r\n...\r\n```\r\n`api.raml` should be on resources classpath\r\n# Naming conventions\r\nREST | RAML | JAX-RS without JRAML | Pure Java with JRAML \r\n------------ | ------------ | ------------- | -------------\r\nURL: /testResource | Resource `/testResource:` | `@Path(\"/testResource\")`<br />`public class AnyName {`|`public class` **TestResource** `{`\r\nGET: /testResource | `/testResource:`<br />`  get:` | `@Path(\"/testResource\")`<br />`public class AnyName {`<br />`...`<br />`@GET`<br />`public ReturnType methodName() {`|`public class TestResource {`<br />`...`<br />`public ReturnType` **get**`AnyName()`\r\n# Useful links\r\n[RAML](http://raml.org/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}